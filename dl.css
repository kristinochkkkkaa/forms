:root {
    // palette
    --primary-300: #93c5fd;
    --grey-50: #f8fafc;
    --grey-100: #f1f5f9;
    --grey-300: #cbd5e1;
    --grey-400: #94a3b8;
    --grey-500: #64748b;
    --grey-600: #475569;
  
    --switch-height: 2.5em;
    --switch-padding: 0.25em;
    --switch-button-size: calc(var(--switch-height) - 2 * var(--switch-padding));
    --standard-easing: cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  // THEMES
  
  :root {
    --body-color: white;
    --font-color: var(--grey-600);
    --icon-inactive-color: var(--grey-400);
    --switch-background-color: var(--grey-100);
    --switch-shadow: inset 0px 0px 0.125em rgba(0, 0, 0, 0.06),
      inset 0px 0px 0.0625em rgba(0, 0, 0, 0.04);
    --switch-button-shadow: 0px 0px 0.125em rgba(0, 0, 0, 0.06),
      0px 0px 0.0625em rgba(0, 0, 0, 0.04);
  }
  
  @mixin dark-theme {
    --body-color: var(--grey-600);
    --font-color: var(--grey-50);
    --icon-inactive-color: var(--grey-300);
    --switch-background-color: var(--grey-500);
    --switch-shadow: inset 0px 0px 0.125em rgba(0, 0, 0, 0.16),
      inset 0px 0px 0.0625em rgba(0, 0, 0, 0.24);
    --switch-button-shadow: 0px 0px 0.125em rgba(0, 0, 0, 0.16),
      0px 0px 0.0625em rgba(0, 0, 0, 0.14);
  }
  
  [color-scheme="dark"] {
    @include dark-theme;
  }
  
  @media (prefers-color-scheme: dark) {
    [color-scheme="auto"] {
      @include dark-theme;
    }
  }
  
  // GENERAL STYLE
  
  body {
    padding: 5rem;
    display: grid;
    place-items: center;
    font-family: sans-serif;
    font-size: 300%; // <- this is what makes the component so big, for demonstration purpose
    color: var(--font-color);
    background: var(--body-color);
    transition: background 100ms, color 100ms;
    margin-top: 25vh;
  }
  
  label {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    cursor: pointer;
    transition: background 100ms;
  
    // for hover
    &::before {
      content: "";
      position: absolute;
      width: var(--switch-button-size);
      height: var(--switch-button-size);
      background: var(--font-color);
      opacity: 0;
      border-radius: 50%;
      transition: opacity 100ms;
    }
  
    &:hover::before {
      opacity: 0.05;
    }
  
    svg {
      max-width: calc(0.6 * var(--switch-button-size));
      max-height: calc(0.6 * var(--switch-button-size));
      width: 100%;
      height: auto;
      z-index: 1;
      color: var(--icon-inactive-color);
      transition: color 100ms;
  
      > * {
        transition: color 100ms, transform 200ms, opacity 100ms;
      }
    }
  
    &:first-child {
      margin-left: var(--switch-padding);
    }
    &:last-child {
      margin-right: var(--switch-padding);
    }
  }
  
  .switch {
    width: calc(3 * var(--switch-button-size) + 2 * var(--switch-padding));
    height: var(--switch-height);
    background: var(--switch-background-color);
    box-shadow: var(--switch-shadow);
    position: relative;
    display: inline-flex;
    border-radius: calc(var(--switch-height) / 2);
    transition: background 150ms var(--standard-easing);
  
    &__button {
      width: var(--switch-button-size);
      height: var(--switch-button-size);
      background: var(--body-color);
      border-radius: 50%;
      box-shadow: var(--switch-button-shadow);
      position: absolute;
      pointer-events: none;
      left: var(--switch-padding);
      top: calc(50% - var(--switch-button-size) / 2);
      transition: left 150ms var(--standard-easing), background 100ms,
        box-shadow 100ms;
    }
  }
  
  input {
    opacity: 0;
    width: 0;
    height: 0;
    position: absolute;
  
    &:focus-visible ~ .switch__button {
      box-shadow: 0 0 0 0.15em var(--primary-300);
    }
  
    // fallback for older browsers
    &:focus ~ .switch__button {
      box-shadow: 0 0 0 0.15em var(--primary-300);
    }
  
    // no focus ring on browsers that support :focus-visible
    &:focus:not(:focus-visible) ~ .switch__button {
      box-shadow: var(--switch-button-shadow);
    }
  }
  
  input:checked ~ svg {
    color: var(--font-color);
  }
  
  // ICON SUN
  
  input[value="light"] {
    ~ svg {
      max-width: calc(0.7 * var(--switch-button-size));
      max-height: calc(0.7 * var(--switch-button-size));
    }
  
    ~ svg > #sun-rays {
      transform-origin: center;
    }
  
    &:not(:checked) ~ svg > #sun-rays {
      transform: rotate(45deg);
      transform-origin: center;
      stroke-width: 0.5;
    }
  }
  
  input[value="light"]:checked ~ svg,
  input[value="auto"]:checked ~ svg {
    color: #facc15;
  }
  
  // ICON MOON
  
  input[value="dark"] {
    ~ svg > .star {
      transform-origin: bottom;
    }
  
    &:not(:checked) ~ svg > .star {
      transform: rotate(-45deg);
      opacity: 0;
    }
  }
  
  // ICON AUTO
  
  [color-scheme="dark"] input[value="auto"]:checked ~ svg {
    color: inherit;
  }
  
  input[value="auto"] ~ svg > .sun,
  input[value="auto"] ~ svg > .star {
    opacity: 0;
    transform: translateY(50%);
  }
  
  input[value="auto"]:checked ~ svg > .sun {
    transform: none;
    opacity: 1;
  }
  
  @media (prefers-color-scheme: dark) {
    [color-scheme="auto"] {
      input[value="auto"]:checked ~ svg {
        color: inherit;
  
        > .star {
          opacity: 1;
          transform: none;
        }
  
        > .sun {
          opacity: 0;
        }
      }
    }
  }
  
  // BUTTON
  
  input:not(:checked) + .switch__button {
    visibility: hidden;
  
    &:hover {
      visibility: visible;
      opacity: 0.2;
    }
  }
  
  [color-scheme="dark"] .switch__button {
    left: calc(var(--switch-padding) + var(--switch-button-size));
  }
  
  [color-scheme="auto"] .switch__button {
    left: calc(var(--switch-padding) + 2 * var(--switch-button-size));
  }
  
  .label {
    margin-top: 0.5rem;
  }
  